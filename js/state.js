
// Debounce function to limit how often saveState is called
const debounce = (func, wait) => {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
};


// --- Refactored Save Logic for Immediate Persistence ---
let _saveState; // To hold the raw saveState function from firebase.js
const getSaveState = async () => {
    if (!_saveState) {
        const { saveState } = await import('./firebase.js');
        _saveState = saveState;
    }
    return _saveState;
}

let debouncedSave;
const getDebouncedSave = async () => {
    if (!debouncedSave) {
        const save = await getSaveState();
        debouncedSave = debounce(save, 1000);
    }
    return debouncedSave;
};


const version = '1.6.0-refactor';
const changelog = {
    '1.6.0-refactor': [
        'üöÄ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω–æ —Å –Ω—É–ª—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.',
        '–ö–æ–¥ —Ä–∞–∑–±–∏—Ç –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏ (UI, API, Firebase, State), —á—Ç–æ —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –∏ —É–ø—Ä–æ—â–∞–µ—Ç –¥–∞–ª—å–Ω–µ–π—à—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É.',
        '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –º–µ—à–∞–≤—à–∞—è –≤–≤–æ–¥—É API-–∫–ª—é—á–∞.',
    ],
    '1.5.2-hotfix': [
        'üî• –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –∏–∑-–∑–∞ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±—ã–ª–æ –≤–≤–µ—Å—Ç–∏ API-–∫–ª—é—á –≤ –º–∞—Å—Ç–µ—Ä–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.',
        '–£–ª—É—á—à–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–¥–æ–±–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ –±—É–¥—É—â–µ–º.',
    ],
    '1.5.1-hotfix': [
        '–£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ API-–∫–ª—é—á–∞ Gemini.',
        '–î–æ–±–∞–≤–ª–µ–Ω—ã –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–∫–∞—Ö –∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö.',
        '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á —É–¥–∞–ª—è–ª—Å—è –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏.',
    ],
};

const firebaseConfig = {
  apiKey: "AIzaSyAhBuja9z5124TrA65M9agA8IEHobby0h4",
  authDomain: "family-menu-563ef.firebaseapp.com",
  projectId: "family-menu-563ef",
  storageBucket: "family-menu-563ef.firebasestorage.app",
  messagingSenderId: "1096564405600",
  appId: "1:1096564405600:web:1fdb4e5e094396152ada05",
  measurementId: "G-BVDV6ZWRHM"
};


const defaultState = {
    settings: {
        apiKey: null,
        family: [],
        preferences: "–ë–µ–∑ —Ä—ã–±—ã, –±–µ–∑ –≥—Ä–∏–±–æ–≤",
        menuDuration: 7,
        totalBudget: 10000,
        cuisine: "–õ—é–±–∞—è",
        difficulty: "–õ—é–±–∞—è",
    },
    menu: [],
    recipes: {},
    shoppingList: [],
    menuHistory: [], // For storing past menus
    recipeCache: {},
    cookedMeals: {},
    timestamp: null,
    currentDayIndex: 0,
    temp: null, // For preview screen
};

let state = JSON.parse(JSON.stringify(defaultState));

export function getState() {
    return state;
}

export function setState(newState) {
    if (newState) {
        state = { ...defaultState, ...newState };
        // Ensure recipeCache exists for users with older state structures
        if (!state.recipeCache) {
            state.recipeCache = {};
        }
    } else {
        state = JSON.parse(JSON.stringify(defaultState));
    }
}

export async function updateState(updates, immediate = false) {
    state = { ...state, ...updates };

    if (immediate) {
        // Call saveState directly, bypassing the debounce for critical updates
        // like saving a recipe during generation.
        const save = await getSaveState();
        if (save) await save();
    } else {
        // Use the debounced save for regular UI updates to avoid excessive writes.
        const save = await getDebouncedSave();
        if (save) save();
    }
}


export function getVersion() {
    return version;
}

export function getChangelog() {
    return changelog;
}

export function getFirebaseConfig() {
    return firebaseConfig;
}

export function getDefaultState() {
    return JSON.parse(JSON.stringify(defaultState));
}